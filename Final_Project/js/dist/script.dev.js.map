{"version":3,"sources":["script.js"],"names":["window","onscroll","scrollFunction","document","body","scrollTop","documentElement","getElementById","style","padding","backgroundColor","width","availableLetters","words","guessInput","guess","guessButton","lettersGuessed","lettersMatched","output","man","letters","lives","currentWord","numLettersMatched","messages","setup","win","lose","guessed","validLetter","Math","floor","random","length","innerHTML","value","display","letter","i","charAt","toUpperCase","insertAdjacentHTML","gameOver","classList","add","onload","onclick","onsubmit","e","preventDefault","remove","indexOf","lettersToShow","querySelectorAll","j","addEventListener","tiles","Array","from","playerDisplay","querySelector","resetButton","announcer","board","currentPlayer","isGameActive","PLAYERX_WON","PLAYERO_WON","TIE","winningConditions","isValidAction","tile","innerText","updateBoard","index","changePlayer","announce","type","handleResultValidation","roundWon","winCondition","a","b","c","includes","userAction","forEach","resetBoard"],"mappings":"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","sourcesContent":["//NAVBAR SCROLL\r\nwindow.onscroll = function() {scrollFunction()};\r\n\r\nfunction scrollFunction() {\r\n  if (document.body.scrollTop > 50 || document.documentElement.scrollTop > 50) {\r\n    document.getElementById(\"navbar\").style.padding = \"30px 10px\";\r\n    document.getElementById(\"navbar\").style.backgroundColor = \"rgba(255, 255, 255, 0.9)\";\r\n    document.getElementById(\"logo\").style.width = \"20vw\";\r\n  } else {\r\n    document.getElementById(\"navbar\").style.padding = \"80px 10px\";\r\n    document.getElementById(\"navbar\").style.backgroundColor = \"rgba(255, 255, 255, 0.0)\";\r\n    document.getElementById(\"logo\").style.width = \"40vw\";\r\n  }\r\n}\r\n\r\n//TITLE ANIMATION\r\n// var DynamicTitle = function(el, toRotate, period) {\r\n//     this.toRotate = toRotate;\r\n//     this.el = el;\r\n//     this.loopNum = 0;\r\n//     this.period = parseInt(period, 10) || 2000;\r\n//     this.txt = '';\r\n//     this.tick();\r\n//     this.isDeleting = false;\r\n//   };\r\n  \r\n//   DynamicTitle.prototype.tick = function() {\r\n//     var i = this.loopNum % this.toRotate.length;\r\n//     var fullTxt = this.toRotate[i];\r\n  \r\n//     if (this.isDeleting) {\r\n//       this.txt = fullTxt.substring(0, this.txt.length - 1);\r\n//     } else {\r\n//       this.txt = fullTxt.substring(0, this.txt.length + 1);\r\n//     }\r\n  \r\n//     this.el.innerHTML = '<span class=\"wrap\">'+this.txt+'</span>';\r\n  \r\n//     var that = this;\r\n//     var delta = 300 - Math.random() * 100;\r\n  \r\n//     if (this.isDeleting) { delta /= 2; }\r\n  \r\n//     if (!this.isDeleting && this.txt === fullTxt) {\r\n//       delta = this.period;\r\n//       this.isDeleting = true;\r\n//     } else if (this.isDeleting && this.txt === '') {\r\n//       this.isDeleting = false;\r\n//       this.loopNum++;\r\n//       delta = 500;\r\n//     }\r\n  \r\n//     setTimeout(function() {\r\n//       that.tick();\r\n//     }, delta);\r\n//   };\r\n  \r\n//   window.onload = function() {\r\n//     var elements = document.getElementsByClassName('dynamic-title');\r\n//     for (var i=0; i<elements.length; i++) {\r\n//       var toRotate = elements[i].getAttribute('data-rotate');\r\n//       var period = elements[i].getAttribute('data-period');\r\n//       if (toRotate) {\r\n//         new TxtRotate(elements[i], JSON.parse(toRotate), period);\r\n//       }\r\n//     }\r\n//     // INJECT CSS\r\n//     var css = document.createElement(\"style\");\r\n//     css.type = \"text/css\";\r\n//     css.innerHTML = \".dynamic-title > .wrap { border-right: 0.08em solid #666 }\";\r\n//     document.body.appendChild(css);\r\n//   };\r\n\r\n\r\n\r\n\r\n\r\n\r\n// var text = [\"TIC TAC TOE\", \"HANGMAN\", \"ROCK PAPER SCISSORS\"];\r\n// var counter = 0;\r\n// var elem = document.getElementById(\"game-name\");\r\n// setInterval(change, 3000);\r\n// function change() {\r\n//  elem.innerHTML = text[counter];\r\n//         counter++;\r\n//         if(counter >= text.length) { counter = 0; }\r\n// }\r\n\r\n\r\n// var game = new Array(\"TIC TAC TOE\", \"HANGMAN\", \"ROCK PAPER SCISSORS\");\r\n\r\n// var counter = 0;\r\n// document.getElementById('game-name').innerHTML = game[counter];\r\n\r\n// Changegame1();\r\n// function Changegame1(){\r\n//   incrementIndex()\r\n//   document.getElementById('game-name1').innerHTML = game[counter];\r\n\r\n//   document.getElementById('game-name').style.opacity = 0;\r\n \r\n//   document.getElementById('game-name1').style.opacity = 1;\r\n\r\n//   setTimeout(Changegame, 2000);\r\n// }\r\n// function Changegame(){\r\n//   incrementIndex();\r\n//   document.getElementById('game-name').innerHTML = greet[counter];\r\n \r\n//   document.getElementById('game-name').style.opacity = 1;\r\n \r\n//   document.getElementById('game-name1').style.opacity = 0;\r\n \r\n//   setTimeout(Changegame1, 2000);\r\n// }\r\n// function incrementIndex(){\r\n//   if(counter < greet.length - 1 ){\r\n//     counter++;\r\n//   }else{\r\n//     counter = 0;\r\n//   }\r\n// }\r\n\r\n\r\n\r\n// //TITLE ANIMATION\r\n// const text = document.querySelector(\".dynamic\");\r\n// const typer = (str, target) => {\r\n//   let newText = \"\";\r\n//   let step = 1;\r\n//   const element = target;\r\n//   const tic = setInterval(() => {\r\n//     if (step === str.length) clearInterval(tic);\r\n//     newText += str.slice(step - 1, step);\r\n//     step += 1;\r\n//     element.innerHTML = newText;\r\n//   }, 100);\r\n// };\r\n\r\n// const handler = (timer) => {\r\n//   let counter = 0;\r\n//   const arrayOfText = [\"HANGMAN\", \"ROCK PAPER SCISSORS\"];\r\n//   const change = () => {\r\n//     typer(arrayOfText[counter], text);\r\n//     counter += 1;\r\n//     if (counter >= arrayOfText.length) counter = 0;\r\n//   };\r\n//   setInterval(change, timer);\r\n// };\r\n\r\n// window.addEventListener(\"load\", handler(2000));\r\n\r\n\r\n\r\n//HANGMAN GAME//\r\n(function () {\r\n    \"use strict\";\r\n    var availableLetters, words, guessInput, guess, guessButton, lettersGuessed, lettersMatched, output, man, letters, lives, currentWord, numLettersMatched, messages;\r\n\r\n    function setup() {\r\n        /* start config options */\r\n        availableLetters = \"abcdefghijklmnopqrstuvwxyz\";\r\n        lives = 5;\r\n        words = [\"pizza\", \"chocolate\", \"peppermint\", \"water\"];\r\n        messages = {\r\n            win: 'You win!',\r\n            lose: 'Game over!',\r\n            guessed: ' already guessed, please try again...',\r\n            validLetter: 'Please enter a letter from A-Z'\r\n        };\r\n        /* end config options */\r\n\r\n        lettersGuessed = lettersMatched = '';\r\n        numLettersMatched = 0;\r\n\r\n        /* choose a word */\r\n        currentWord = words[Math.floor(Math.random() * words.length)];\r\n\r\n        /* make #man and #output blank, create vars for later access */\r\n        output = document.getElementById(\"output\");\r\n        man = document.getElementById(\"man\");\r\n        guessInput = document.getElementById(\"letter\");\r\n\r\n        man.innerHTML = 'You have ' + lives + ' lives remaining';\r\n        output.innerHTML = '';\r\n\r\n        document.getElementById(\"letter\").value = '';\r\n\r\n        /* make sure guess button is enabled */\r\n        guessButton = document.getElementById(\"guess\");\r\n        guessInput.style.display = 'flex';\r\n        guessButton.style.display = 'flex';\r\n\r\n        /* set up display of letters in current word */\r\n        letters = document.getElementById(\"letters\");\r\n        letters.innerHTML = '<li class=\"current-word\">Current word:</li>';\r\n\r\n        var letter, i;\r\n        for (i = 0; i < currentWord.length; i++) {\r\n            letter = '<li class=\"letter letter' + currentWord.charAt(i).toUpperCase() + '\">' + currentWord.charAt(i).toUpperCase() + '</li>';\r\n            letters.insertAdjacentHTML('beforeend', letter);\r\n        }\r\n    }\r\n\r\n    function gameOver(win) {\r\n        if (win) {\r\n            output.innerHTML = messages.win;\r\n            output.classList.add('win');\r\n        } else {\r\n            output.innerHTML = messages.lose;\r\n            output.classList.add('error');\r\n        }\r\n\r\n        guessInput.style.display = guessButton.style.display = 'none';\r\n        guessInput.value = '';\r\n    }\r\n\r\n    /* Start game - should ideally check for existing functions attached to window.onload */\r\n    window.onload = setup();\r\n\r\n    /* buttons */\r\n    document.getElementById(\"restart\").onclick = setup;\r\n\r\n    /* reset letter to guess on click */\r\n    guessInput.onclick = function () {\r\n        this.value = '';\r\n    };\r\n\r\n    /* main guess function when user clicks #guess */\r\n    document.getElementById('hangman').onsubmit = function (e) {\r\n        if (e.preventDefault) e.preventDefault();\r\n        output.innerHTML = '';\r\n        output.classList.remove('error', 'warning');\r\n        guess = guessInput.value;\r\n\r\n        /* does guess have a value? if yes continue, if no, error */\r\n        if (guess) {\r\n            /* is guess a valid letter? if so carry on, else error */\r\n            if (availableLetters.indexOf(guess) > -1) {\r\n                /* has it been guessed (missed or matched) already? if so, abandon & add notice */\r\n                if ((lettersMatched && lettersMatched.indexOf(guess) > -1) || (lettersGuessed && lettersGuessed.indexOf(guess) > -1)) {\r\n                    output.innerHTML = '\"' + guess.toUpperCase() + '\"' + messages.guessed;\r\n                    output.classList.add(\"warning\");\r\n                }\r\n                /* does guess exist in current word? if so, add to letters already matched, if final letter added, game over with win message */\r\n                else if (currentWord.indexOf(guess) > -1) {\r\n                    var lettersToShow;\r\n                    lettersToShow = document.querySelectorAll(\".letter\" + guess.toUpperCase());\r\n\r\n                    for (var i = 0; i < lettersToShow.length; i++) {\r\n                        lettersToShow[i].classList.add(\"correct\");\r\n                    }\r\n\r\n                    /* check to see if letter appears multiple times */\r\n                    for (var j = 0; j < currentWord.length; j++) {\r\n                        if (currentWord.charAt(j) === guess) {\r\n                            numLettersMatched += 1;\r\n                        }\r\n                    }\r\n\r\n                    lettersMatched += guess;\r\n                    if (numLettersMatched === currentWord.length) {\r\n                        gameOver(true);\r\n                    }\r\n                }\r\n                /* guess doesn't exist in current word and hasn't been guessed before, add to lettersGuessed, reduce lives & update user */\r\n                else {\r\n                    lettersGuessed += guess;\r\n                    lives--;\r\n                    man.innerHTML = 'You have ' + lives + ' lives remaining';\r\n                    if (lives === 0) gameOver();\r\n                }\r\n            }\r\n            /* not a valid letter, error */\r\n            else {\r\n                output.classList.add('error');\r\n                output.innerHTML = messages.validLetter;\r\n            }\r\n        }\r\n        /* no letter entered, error */\r\n        else {\r\n            output.classList.add('error');\r\n            output.innerHTML = messages.validLetter;\r\n        }\r\n        return false;\r\n    };\r\n}());\r\n\r\n\r\n\r\n//TIC TAC TOE GAME//\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n    const tiles = Array.from(document.querySelectorAll('.tile'));\r\n    const playerDisplay = document.querySelector('.display-player');\r\n    const resetButton = document.querySelector('#reset');\r\n    const announcer = document.querySelector('.announcer');\r\n\r\n    let board = ['', '', '', '', '', '', '', '', ''];\r\n    let currentPlayer = 'X';\r\n    let isGameActive = true;\r\n\r\n    const PLAYERX_WON = 'PLAYERX_WON';\r\n    const PLAYERO_WON = 'PLAYERO_WON';\r\n    const TIE = 'TIE';\r\n\r\n    const winningConditions = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n     ];\r\n\r\n    const isValidAction = (tile) => {\r\n        if (tile.innerText === 'X' || tile.innerText === 'O'){\r\n            return false;\r\n        }\r\n    \r\n        return true;\r\n    };\r\n\r\n    const updateBoard =  (index) => {\r\n        board[index] = currentPlayer;\r\n    }\r\n\r\n    const changePlayer = () => {\r\n        playerDisplay.classList.remove(`player${currentPlayer}`);\r\n        currentPlayer = currentPlayer === 'X' ? 'O' : 'X';\r\n        playerDisplay.innerText = currentPlayer;\r\n        playerDisplay.classList.add(`player${currentPlayer}`);\r\n    }\r\n\r\n    const announce = (type) => {\r\n        switch(type){\r\n           case PLAYERO_WON:\r\n                announcer.innerHTML = 'Player <span class=\"playerO\">O</span> Won';\r\n                break;\r\n           case PLAYERX_WON:\r\n                announcer.innerHTML = 'Player <span class=\"playerX\">X</span> Won';\r\n                break;\r\n           case TIE:\r\n                announcer.innerText = 'Tie';\r\n            }\r\n        announcer.classList.remove('hide');\r\n    };\r\n\r\n    function handleResultValidation() {\r\n        let roundWon = false;\r\n        for (let i = 0; i <= 7; i++) {\r\n          const winCondition = winningConditions[i];\r\n          const a = board[winCondition[0]];\r\n          const b = board[winCondition[1]];\r\n          const c = board[winCondition[2]];\r\n          if (a === \"\" || b === \"\" || c === \"\") {\r\n            continue;\r\n          }\r\n          if (a === b && b === c) {\r\n            roundWon = true;\r\n            break;\r\n          }\r\n        }\r\n      \r\n        if (roundWon) {\r\n          announce(currentPlayer === \"X\" ? PLAYERX_WON : PLAYERO_WON);\r\n          isGameActive = false;\r\n          return;\r\n        }\r\n      \r\n        if (!board.includes(\"\")) announce(TIE);\r\n      }\r\n\r\n      const userAction = (tile, index) => {\r\n        if (isValidAction(tile) && isGameActive) {\r\n          tile.innerText = currentPlayer;\r\n          tile.classList.add(`player${currentPlayer}`);\r\n          updateBoard(index);\r\n          handleResultValidation();\r\n          changePlayer();\r\n        }\r\n      };\r\n\r\n    tiles.forEach( (tile, index) => {\r\n        tile.addEventListener('click', () => userAction(tile, index));\r\n    });\r\n\r\n    const resetBoard = () => {\r\n        board = ['', '', '', '', '', '', '', '', ''];\r\n        isGameActive = true;\r\n        announcer.classList.add('hide');\r\n    \r\n        if (currentPlayer === 'O') {\r\n            changePlayer();\r\n        }\r\n    \r\n        tiles.forEach(tile => {\r\n            tile.innerText = '';\r\n            tile.classList.remove('playerX');\r\n            tile.classList.remove('playerO');\r\n        });\r\n    }\r\n\r\n    resetButton.addEventListener('click', resetBoard);\r\n\r\n  });"],"file":"script.dev.js"}